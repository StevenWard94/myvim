" vim: fo-=oql:foldmarker=\\begin,\\end:foldmethod=marker:foldlevel=0:nospell:
" ------------------------------------------------------------------------------
" Vim bundles configuration file
" Language:       N/A
" Maintainer:     Steven Ward <stevenward94@gmail.com>
" URL:            https://github.com/stevenward94/myvim
" ------------------------------------------------------------------------------

" Setup \begin1
  set nocompatible
  filetype off
  
  " Load Plugins using Vundle
  call vundle#begin('~/.vim/bundle')

  Plugin 'VundleVim/Vundle.vim'
  Plugin 'scrooloose/syntastic'
  Plugin 'eagletmt/ghcmod-vim'
  Plugin 'eagletmt/neco-ghc'
  Plugin 'ctrlpvim/ctrlp.vim'
  Plugin 'tomtom/tlib_vim.git'
  Plugin 'MarcWeber/vim-addon-mw-utils'
  Plugin 'garbas/vim-snipmate'
  Plugin 'scrooloose/nerdtree'
  Plugin 'scrooloose/nerdcommenter'
  Plugin 'godlygeek/tabular'
  Plugin 'Shougo/neocomplete.vim'
  Plugin 'tpope/vim-fugitive'

  call vundle#end()
  filetype plugin indent on
" \end1

" Plugin-Specifig Configurations \begin1

  " Syntastic \begin2
    map <Leader>s :SyntasticToggleMode<CR>

    set statusline+=%#warningmsg#
    set statusline+=%{SyntasticStatuslineFlag()}
    set statusline+=%*

    let g:syntastic_always_populate_loc_list = 1
    let g:syntastic_auto_loc_list = 0
    let g:syntastic_check_on_open = 1
    let g:syntastic_check_on_wq = 0
  " \end2

  " GHC-Mod \begin2
    map <silent> tw :GhcModTypeInsert<CR>
    map <silent> ts :GhcModSplitFunCase<CR>
    map <silent> tq :GhcModType<CR>
    map <silent> te :GhcModTypeClear<CR>
  " \end2

  " SuperTab \begin2
    let g:SuperTabDefaultCompletionType = '<C-X><C-O>'

    if has('gui_running')
      imap <C-Space> <C-R>=SuperTabAlternateCompletion("\<lt>C-X>\<lt>C-O>")<CR>
    else      " i.e. !has('gui_running')
      if has('unix')
        " this was pissing me off so it's omitted until I actually set-up autocompletion properly
        "inoremap <Nul> <C-R>=SuperTabAlternateCompletion("\<lt>C-X>\<lt>C-O>")<CR>
      endif
    endif

    " configure SuperTab to dispatch to neco-ghc's tab completion instead of the usual local variable completion
    let g:haskellmode_completion_ghc = 1
    autocmd FileType haskell :setlocal omnifunc=necoghc#omnifunc
  " \end2

  " NERDTree \begin2
    map <leader>n :NERDTreeToggle<CR>
  " \end2

  " Tabularize \begin2
    let g:haskell_tabular = 1

    vmap a= :Tabularize /=<CR>
    vmap a; :Tabularize /::<CR>
    vmap a- :Tabularize /-><CR>
  " \end2

  " Ctrl-p \begin2
    " binds the ctrl-p 'fuzzy search' panel to <leader>t (in my case ',t')
    map <silent> <leader>t :CtrlP()<CR>
    noremap <leader>b<Space> :CtrlPBuffer<CR>
    let g:ctrlp_custom_ignore = '\v[\/]dist$'
  " \end2
" \end1
